version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: "fastapi"
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysql
    networks:
      - app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
  #  links: # 容器之间链接 (@host -> @容器别名) 即将被官方遗弃
  #    - "redis:redis"     # 容器名:别名 (redis://user:password@127.0.0.1:6379/db -> redis://user:password@redis:6379/db)
  #    - "mysql:mysql"     # 容器名:别名 (mysql://root:password@127.0.0.1:3306/db -> mysql://root:password@mysql:3306/db)

  # nginx:
  #   restart: always
  #   image: "nginx:latest"
  #   container_name: "nginx"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes: # 数据卷
  #     - /opt/docker/nginx/nginx.conf:/etc/nginx/nginx.conf # 配置文件 (宿主机:容器)
  #     - /opt/docker/nginx/conf.d:/etc/nginx/conf.d         # 配置文件夹 (宿主机:容器)
  #     - /opt/docker/nginx/html:/usr/share/nginx/html       # 前端打包文件 (宿主机:容器)
  #     - /opt/docker/nginx/nginx:/var/log/nginx             # 日志文件夹 (宿主机:容器)
  #   #  - /opt/docker/nginx/ssl/                            # SSL证书地址 (自定义位置)
  #   depends_on: # 依赖项
  #     - backend
  #   networks: # 网络桥段
  #     - app                                                # 指定在app网络桥段下网络互通

  redis:
    restart: always                                        # 重启策略
    image: "redis:latest"                                  # 镜像名 (${image}:${tag})
    container_name: "redis"                                # 容器名 (自定义)
    environment:
      - REDIS_PASSWORD=123456
    ports:
      - "6379:6379"                                        # 端口号 (宿主机:容器)
    volumes: # 数据卷
      - /opt/docker/redis/redis.conf:/etc/redis/redis.conf # 配置文件 (宿主机:容器)
      - /opt/docker/redis/data:/data                       # 数据文件夹 (宿主机:容器)
      - /opt/docker/redis/opt:/opt                         # redis module (宿主机:容器)
    command: [ "redis-server", '--requirepass', "123456" ]    # 启动 redis 服务
    networks: # 网络桥段
      - app                                                # 指定在app网络桥段下网络

  mysql:
    restart: always                                        # 重启策略
    image: "mysql:latest"                                  # 镜像名 (${image}:${tag})
    container_name: "mysql"                                # 容器名 (自定义)
    ports:
      - "3306:3306"                                        # 端口号 (宿主机:容器)
    volumes: # 数据卷
      - /opt/docker/mysql/conf.d:/etc/mysql/conf.d         # 配置文件夹 (宿主机:容器)
      - /opt/docker/mysql/data/:/var/lib/mysql             # 数据文件夹 (宿主机:容器)
      - /opt/docker/mysql/logs:/logs                       # 日志文件夹 (宿主机:容器)
    environment:
      - MYSQL_ROOT_PASSWORD=123456                         # root用户密码 (自定义)
      - TZ=Asia/Jakarta                                   # mysql时区
    command:
      # The default password verification method of MySQL8 is caching_sha2_password, 
      # but many connection tools do not yet support this method.
      # You need to manually set the password authentication method of mysql to the 
      # previous mysql_native_password method.
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1                           # 设置表名大小写不敏感
    networks: # 网络桥段
      - app                                                # 指定在app网络桥段下网络

networks:
  app: # 使用默认配置
    name: app                                               # 否则会多创建一个 docker_app 桥段 (可选)